# This is a basic workflow to help you get started with Actions

name: Deploy to development server

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [development]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: appleboy/ssh-action@master
        with:
            host: ${{vars.SSH_HOST}}
            username: ${{vars.SSH_USER}}
            password: ${{secrets.SSH_PASSPHRASE}}
            script: |
              cd /var/www/vhosts/oykos.me/${{vars.GIT_REPO}}.oykos.me
              [ -d "./github" ] && echo "Existing github directory" || mkdir github
              cd github
              rm -rf ./${{vars.GIT_REPO}}
              git clone -b development https://oykos-development-hub:${{secrets.GIT_ACCESS_TOKEN}}@github.com/oykos-development-hub/${{vars.GIT_REPO}}.git
              cd ./${{vars.GIT_REPO}}
              if ! command -v go &> /dev/null; then
                echo "Go version is 1.20 or higher!"
              elif [[ "$(go version)" != *"go1.22"* ]]; then
                sudo rm -rf /usr/bin/go
                echo "Go version is below 1.22. Installing Go 1.20..."
                wget https://go.dev/dl/go1.22.4.linux-amd64.tar.gz
                tar -C /usr/local -xzf go1.22.4.linux-amd64.tar.gz
                export PATH=$PATH:/usr/local/go/bin
                source ~/.bashrc
                rm go1.20.linux-amd64.tar.gz
              fi
              export PATH="/usr/local/go/bin:$PATH"
              go mod tidy
              go build -o bff
              if [ ! -f ./bff ]; then
                echo "Go build "bff" file does not exist!"
                exit 1
              fi
              if [ ! -f ./bff ]; then
                echo "Go build "bff" file does not exist!"
                exit 1
              fi
              rm -rf ../../bff
              cp ./bff ../../
              sudo systemctl restart ${{vars.GIT_REPO}}.service